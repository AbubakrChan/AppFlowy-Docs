@startuml FlowySDKProtocolBuffer
left to right direction
skinparam linetype ortho

package "Front-end (Flutter)" #DDDDDD {
    component Repository_A as "Repository A"
    component FFI_Frontend as "FFI" #FFDDDD
}

package "Back-end (Rust)" #DDDDDD {
    component FFI_Backend as "FFI" #FFDDDD
    component Dispatcher
    component Module_A as "Module A"
}

Repository_A ...> FFI_Frontend : Event
FFI_Frontend <---> FFI_Backend : Protobuf
FFI_Backend --> Dispatcher
Dispatcher --> Module_A

@enduml

@startmindmap FlowyTool-Event
title FlowyTool Event CodeGen Process
*[#Orange]:
<code>
enum FolderEvent {
    #[event(input = "ExportRequest", output = "ExportData")]
    ExportDocument = 0,
}
</code>
;
**_ 1. Run script
***[#lightblue]: File: code_gen.dart
<code>
class FolderEventExportDocument {
    Future<Either<ExportData, FlowyError>> send() {
        xxx
    }
}
</code>
;
@endmindmap




@startmindmap FlowyTool-PB
title FlowyTool PB CodeGen Process
*[#Orange]: File: share.rs
<code>
struct ExportData {
    #[pb(index = 1)]
    pub data: String,

    #[pb(index = 2)]
    pub export_type: ExportType,
}
</code>
;
**_ 1.Run script
***[#lightblue]: File: share.proto
<code>
message ExportData {
    string data = 1,
    ExportType export_type = 2,
}
</code>
;
****_ 2-1.PB CodeGen(Dart)
*****[#lightgreen] share.pb.dart
****_ 2-2.PB CodeGen(Rust)
*****[#lightgreen] share.rs
@endmindmap


