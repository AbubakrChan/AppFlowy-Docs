@startuml ViewBlock
!include interfaces.wsd
!include flowy_sdk.wsd
title Workspace Class Disagram
scale 2



package "Presentation Layer" as "Presentation" {
    class MenuApp extends StatefulWidget {}
    class MenuAppHeader extends StatefulWidget {}
    class AppDataNotifier extends ChangeNotifier {
        List<View> _views
        View _selectedView
        ExpandableController expandController
    }
}

package "Application Layer" as "Application" {
    class AppBloc {
        Stream<ViewState> mapEventToState(ViewEvent event) async*
    }



    class AppEvent { }

    abstract class Initial implements AppEvent {}
    abstract class CreateView implements AppEvent {}
    abstract class Delete implements AppEvent {}
    abstract class Rename implements AppEvent {}
    abstract class ReceiveViews implements AppEvent {}
    abstract class AppDidUpdate implements AppEvent {}

    class AppState  {}

}

package "Domain Layer" as "Domain" {
}

package "Infrastructure" {
    class IAppImpl {}
    class IAppListenerImpl
    class ViewListenerRepository{}
    class AppRepository {
        String appId
    }
    class AppListenerRepository {}

}



MenuAppHeader o-- App
MenuAppHeader o-- AppBloc
MenuApp o-- App
MenuApp o-- AppDataNotifier
AppBloc o-- IApp
AppBloc o-- IAppListener
AppBloc o-- AppEvent
AppBloc o-- AppState
IAppImpl --|> IApp
IAppImpl o-- AppRepository
IAppListenerImpl --|> IAppListener
IAppListenerImpl o-- AppListenerRepository
' ViewRepository o-- View
@enduml


@startuml SequenceDeleteDocument
actor User
SingInScreen  -> LoginButton
MenuAppHeader -> AppBloc: [AppEvent.delete()]
AppBloc -> IAppImpl: delete Request
IAuthImpl -> AppRepository: delete
AppRepository -> WorkspaceEventDeleteApp: request
WorkspaceEventDeleteApp -> Dispatch: request
WorkspaceEventDeleteApp <- Dispatch: UserProfile
AppRepository <- WorkspaceEventDeleteApp: request
IAppImpl <- AppRepository
AppBloc <- IAppImpl: signIgn Response
@enduml