@startuml ViewBloc
!include interfaces.wsd
title Workspace Class Disagram
scale 2



package "Presentation Layer" as "Presentation" {
}

package "Application Layer" as "Application" {
    class ViewBloc {
        Stream<ViewState> mapEventToState(ViewEvent event) async*
    }
}

package "Domain Layer" as "Domain" {
}

package "Infrastructure" {
    class IViewListenerImpl
    class IViewImpl {
    }
    class View {}

    class ViewListenerRepository{}

    class ViewRepository {
        View
    }
}


ViewBloc o-- IView
ViewBloc o-- IViewListener
IViewImpl --|> IView
IViewListenerImpl --|> IViewListener
IViewListenerImpl o-- ViewListenerRepository
IViewImpl o-- ViewRepository
ViewRepository o-- View
@enduml


@startuml SequenceDeleteDocument

actor User
SingInScreen  -> LoginButton
LoginButton -> SignInBloc: [SignedInWithUserEmailAndPassword]
ViewBloc -> IView: delete Request
IAuthImpl -> AuthRepository: signIn
AuthRepository -> UserEventSignIn: request
UserEventSignIn -> Dispath: request
UserEventSignIn <- Dispath: UserProfile
AuthRepository <- UserEventSignIn: request
IAuthImpl <- AuthRepository
SignInBloc <- IAuth: signIgn Response
SignInScreen  <- SignInBloc
@enduml